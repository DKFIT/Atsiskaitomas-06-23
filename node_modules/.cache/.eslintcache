[{"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\index.js":"1","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\App.js":"2","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\homePage.jsx":"3","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\loginPage.jsx":"4","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\registerPage.jsx":"5","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\admin.jsx":"6","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\services\\firebase.js":"7","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\displayPage.jsx":"8","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\navbar.jsx":"9","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\useAuth.jsx":"10","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\addEvents.jsx":"11","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\displayEvents.jsx":"12","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\services\\auth.jsx":"13","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\footer.jsx":"14"},{"size":225,"mtime":1687515225828,"results":"15","hashOfConfig":"16"},{"size":1100,"mtime":1687515095834,"results":"17","hashOfConfig":"16"},{"size":824,"mtime":1687513394901,"results":"18","hashOfConfig":"16"},{"size":6073,"mtime":1687501396140,"results":"19","hashOfConfig":"16"},{"size":8310,"mtime":1687505393539,"results":"20","hashOfConfig":"16"},{"size":3060,"mtime":1687514649868,"results":"21","hashOfConfig":"16"},{"size":727,"mtime":1687509206870,"results":"22","hashOfConfig":"16"},{"size":219,"mtime":1687513239462,"results":"23","hashOfConfig":"16"},{"size":1429,"mtime":1687514056717,"results":"24","hashOfConfig":"16"},{"size":800,"mtime":1687506242365,"results":"25","hashOfConfig":"16"},{"size":2565,"mtime":1687515418875,"results":"26","hashOfConfig":"16"},{"size":3093,"mtime":1687514809394,"results":"27","hashOfConfig":"16"},{"size":351,"mtime":1687512742795,"results":"28","hashOfConfig":"16"},{"size":1704,"mtime":1687515260195,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1glfv8d",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\index.js",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\App.js",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\homePage.jsx",["75"],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\loginPage.jsx",["76","77","78"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nfunction LoginPage() {\r\n  const navigate = useNavigate(); // Use the useNavigate hook within the LoginPage component\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // User is already logged in, redirect to home page\r\n        navigate(\"/home\"); // Use the navigate function to redirect\r\n      }\r\n    });\r\n  }, [navigate]);\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const auth = getAuth();\r\n      const { user } = await signInWithEmailAndPassword(auth, email, password);\r\n  \r\n      // Check if the user is an admin\r\n      if (user) {\r\n        const tokenResult = await user.getIdTokenResult();\r\n        if (tokenResult.claims.admin) {\r\n          // User is an admin, redirect to the admin page\r\n          navigate(\"/admin\");\r\n          return;\r\n        }\r\n      }\r\n  \r\n      // User is not an admin, redirect to the home page\r\n      navigate(\"/home\");\r\n  \r\n      // Log the user token to the console\r\n      const token = await user.getIdToken();\r\n      console.log(\"User Token:\", token);\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"bg-gray-50 dark:bg-gray-900\">\r\n      <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\r\n        <a\r\n          href=\"#\"\r\n          className=\"flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white\"\r\n        ></a>\r\n        <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\r\n          <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\r\n            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\r\n              Sign in to your account\r\n            </h1>\r\n            <form className=\"space-y-4 md:space-y-6\" onSubmit={handleLogin}>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"email\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                >\r\n                  Your email\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                  placeholder=\"name@company.com\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div>\r\n                <label\r\n                  htmlFor=\"password\"\r\n                  className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\r\n                >\r\n                  Password\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"••••••••\"\r\n                  className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-start\">\r\n                  <div className=\"flex items-center h-5\">\r\n                    <input\r\n                      id=\"remember\"\r\n                      aria-describedby=\"remember\"\r\n                      type=\"checkbox\"\r\n                      className=\"w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"ml-3 text-sm\">\r\n                    <label\r\n                      htmlFor=\"remember\"\r\n                      className=\"text-gray-500 dark:text-gray-300\"\r\n                    >\r\n                      Remember me\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"text-sm font-medium text-primary-600 hover:underline dark:text-primary-500\"\r\n                >\r\n                  Forgot password?\r\n                </a>\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800\"\r\n              >\r\n                Sign in\r\n              </button>\r\n              <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\r\n                Don’t have an account yet?{\" \"}\r\n                <Link\r\n                  to=\"/register\"\r\n                  className=\"font-medium text-primary-600 hover:underline dark:text-primary-500\"\r\n                >\r\n                  Sign up\r\n                </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n",[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\registerPage.jsx",["79","80"],[],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getAuth, createUserWithEmailAndPassword, updateProfile, AuthErrorCodes } from \"firebase/auth\";\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\n\r\nexport default function RegisterPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleRegister = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    // Check if passwords match\r\n    if (password !== passwordConfirmation) {\r\n      setError(\"Passwords do not match\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const auth = getAuth();\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n  \r\n      // Update user profile display name\r\n      await updateProfile(userCredential.user, {\r\n        displayName: name,\r\n      });\r\n  \r\n      const database = getDatabase();\r\n      const userRef = ref(database, `users/${userCredential.user.uid}`);\r\n      await set(userRef, {\r\n        name,\r\n        email,\r\n      });\r\n  \r\n      // Redirect or perform any other actions after successful registration\r\n      window.location.href = \"/\";\r\n    } catch (error) {\r\n      console.error(\"Error registering user: \", error);\r\n      if (error.code === AuthErrorCodes.EMAIL_EXISTS) {\r\n        setError(\"Email is already in use\");\r\n      } else {\r\n        setError(\"Failed to register. Please try again.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-col items-center min-h-screen pt-6 sm:justify-center sm:pt-0 bg-gray-50\">\r\n        <div>\r\n          \r\n            <h3 className=\"text-4xl font-bold text-purple-600\">Register Form</h3>\r\n         \r\n        </div>\r\n        <div className=\"w-full px-6 py-4 mt-6 overflow-hidden bg-white shadow-md sm:max-w-lg sm:rounded-lg\">\r\n          <form onSubmit={handleRegister}>\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 undefined\">\r\n                Name\r\n              </label>\r\n              <div className=\"flex flex-col items-start\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  className=\"block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 undefined\">\r\n                Email\r\n              </label>\r\n              <div className=\"flex flex-col items-start\">\r\n                <input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  className=\"block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 undefined\">\r\n                Password\r\n              </label>\r\n              <div className=\"flex flex-col items-start\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  className=\"block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4\">\r\n              <label htmlFor=\"password_confirmation\" className=\"block text-sm font-medium text-gray-700 undefined\">\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"flex flex-col items-start\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password_confirmation\"\r\n                  value={passwordConfirmation}\r\n                  onChange={(e) => setPasswordConfirmation(e.target.value)}\r\n                  className=\"block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\r\n                />\r\n              </div>\r\n            </div>\r\n            {error && <p className=\"text-red-500 mt-2\">{error}</p>}\r\n            <a href=\"#\" className=\"text-xs text-purple-600 hover:underline\">\r\n              Forget Password?\r\n            </a>\r\n            <div className=\"flex items-center mt-4\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"w-full px-4 py-2 tracking-wide text-white transition-colors duration-200 transform bg-purple-700 rounded-md hover:bg-purple-600 focus:outline-none focus:bg-purple-600\"\r\n              >\r\n                Register\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <div className=\"mt-4 text-grey-600\">\r\n            Already have an account?{\" \"}\r\n            <span>\r\n              <Link\r\n                to=\"/\"\r\n                className=\"font-medium text-primary-600 hover:underline dark:text-primary-500\"\r\n              >\r\n                Log in\r\n              </Link>\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center w-full my-4\">\r\n            <hr className=\"w-full\" />\r\n            <p className=\"px-3 \">OR</p>\r\n            <hr className=\"w-full\" />\r\n          </div>\r\n          <div className=\"my-6 space-y-2\">\r\n            <button\r\n              aria-label=\"Login with Google\"\r\n              type=\"button\"\r\n              className=\"flex items-center justify-center w-full p-2 space-x-4 border rounded-md focus:ring-2 focus:ring-offset-1 dark:border-gray-400 focus:ring-violet-400\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 32 32\"\r\n                className=\"w-5 h-5 fill-current\"\r\n              >\r\n                <path d=\"M16.318 13.714v5.484h9.078c-0.37 2.354-2.745 6.901-9.078 6.901-5.458 0-9.917-4.521-9.917-10.099s4.458-10.099 9.917-10.099c3.109 0 5.193 1.318 6.38 2.464l4.339-4.182c-2.786-2.599-6.396-4.182-10.719-4.182-8.844 0-16 7.151-16 16s7.156 16 16 16c9.234 0 15.365-6.49 15.365-15.635 0-1.052-0.115-1.854-0.255-2.651z\"></path>\r\n              </svg>\r\n              <p>Login with Google</p>\r\n            </button>\r\n            <button\r\n              aria-label=\"Login with GitHub\"\r\n              role=\"button\"\r\n              className=\"flex items-center justify-center w-full p-4 space-x-4 border rounded-md focus:ring-2 focus:ring-offset-1 dark:border-gray-400 focus:ring-violet-400\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 32 32\"\r\n                className=\"w-5 h-5 fill-current\"\r\n              >\r\n                <path d=\"M16 0.396c-8.839 0-16 7.167-16 16 0 7.073 4.584 13.068 10.937 15.183 0.803 0.151 1.093-0.344 1.093-0.772 0-0.38-0.009-1.385-0.015-2.719-4.453 0.964-5.391-2.151-5.391-2.151-0.729-1.844-1.781-2.339-1.781-2.339-1.448-0.989 0.115-0.968 0.115-0.968 1.604 0.109 2.448 1.645 2.448 1.645 1.427 2.448 3.744 1.74 4.661 1.328 0.14-1.031 0.557-1.74 1.011-2.135-3.552-0.401-7.287-1.776-7.287-7.907 0-1.751 0.62-3.177 1.645-4.297-0.177-0.401-0.719-2.031 0.141-4.235 0 0 1.339-0.427 4.4 1.641 1.281-0.355 2.641-0.532 4-0.541 1.36 0.009 2.719 0.187 4 0.541 3.043-2.068 4.381-1.641 4.381-1.641 0.859 2.204 0.317 3.833 0.161 4.235 1.015 1.12 1.635 2.547 1.635 4.297 0 6.145-3.74 7.5-7.296 7.891 0.556 0.479 1.077 1.464 1.077 2.959 0 2.14-0.020 3.864-0.020 4.385 0 0.416 0.28 0.916 1.104 0.755 6.4-2.093 10.979-8.093 10.979-15.156 0-8.833-7.161-16-16-16z\"></path>\r\n              </svg>\r\n              <p>Login with GitHub</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\admin.jsx",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\services\\firebase.js",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\displayPage.jsx",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\navbar.jsx",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\useAuth.jsx",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\addEvents.jsx",["81"],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\displayEvents.jsx",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\services\\auth.jsx",[],[],"C:\\Users\\moksleivis\\Desktop\\Atsiskaitymas\\abcd\\src\\components\\footer.jsx",[],[],{"ruleId":"82","severity":1,"message":"83","line":10,"column":9,"nodeType":"84","messageId":"85","endLine":10,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":50,"column":9,"nodeType":"88","endLine":53,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":50,"column":9,"nodeType":"88","endLine":53,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":115,"column":17,"nodeType":"88","endLine":118,"endColumn":18},{"ruleId":"89","severity":1,"message":"90","line":117,"column":13,"nodeType":"88","endLine":117,"endColumn":77},{"ruleId":"91","severity":1,"message":"92","line":160,"column":13,"nodeType":"88","endLine":164,"endColumn":14},{"ruleId":"82","severity":1,"message":"93","line":8,"column":9,"nodeType":"84","messageId":"85","endLine":8,"endColumn":17},"no-unused-vars","'signOut' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/no-redundant-roles","The element button has an implicit role of button. Defining this explicitly is redundant and should be avoided.","'navigate' is assigned a value but never used."]