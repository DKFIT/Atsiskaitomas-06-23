{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createContext, useContext } from 'react';\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  var _auth$user;\n  const auth = useContext(AuthContext);\n\n  // Determine admin status based on user role or any other criteria\n  const isAdmin = (auth === null || auth === void 0 ? void 0 : (_auth$user = auth.user) === null || _auth$user === void 0 ? void 0 : _auth$user.role) === 'admin';\n  return {\n    isAdmin,\n    ...auth\n  };\n};\n_s(useAuth, \"2E+KaGHVlJMhtGjyKmHdHkA1EKU=\");","map":{"version":3,"names":["createContext","useContext","AuthContext","useAuth","_s","_auth$user","auth","isAdmin","user","role"],"sources":["C:/Users/moksleivis/Desktop/Atsiskaitymas/abcd/src/services/auth.jsx"],"sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nexport const AuthContext = createContext(null);\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  // Determine admin status based on user role or any other criteria\r\n  const isAdmin = auth?.user?.role === 'admin';\r\n\r\n  return {\r\n    isAdmin,\r\n    ...auth,\r\n  };\r\n};\r\n"],"mappings":";AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAEjD,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,UAAA;EAC3B,MAAMC,IAAI,GAAGL,UAAU,CAACC,WAAW,CAAC;;EAEpC;EACA,MAAMK,OAAO,GAAG,CAAAD,IAAI,aAAJA,IAAI,wBAAAD,UAAA,GAAJC,IAAI,CAAEE,IAAI,cAAAH,UAAA,uBAAVA,UAAA,CAAYI,IAAI,MAAK,OAAO;EAE5C,OAAO;IACLF,OAAO;IACP,GAAGD;EACL,CAAC;AACH,CAAC;AAACF,EAAA,CAVWD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}